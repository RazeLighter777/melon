<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1126" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1109.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1109.00"> </text><svg id="frames" x="10" width="1180" total_samples="494"><g><title>perf-exec (5 samples, 1.01%)</title><rect x="0.0000%" y="1061" width="1.0121%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="1045" width="1.0121%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="1029" width="1.0121%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="1013" width="1.0121%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="997" width="1.0121%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="981" width="1.0121%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="991.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="965" width="1.0121%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="975.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="949" width="1.0121%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="959.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="933" width="1.0121%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="943.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="917" width="1.0121%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="927.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="901" width="1.0121%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="911.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="885" width="1.0121%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="895.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="869" width="1.0121%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="879.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="853" width="1.0121%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="5"/><text x="0.2500%" y="863.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="837" width="1.0121%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="5"/><text x="0.2500%" y="847.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="0.0000%" y="821" width="1.0121%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="5"/><text x="0.2500%" y="831.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="1.0121%" y="1045" width="1.2146%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="6"/><text x="1.2621%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="1.0121%" y="1029" width="1.2146%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="6"/><text x="1.2621%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="1.0121%" y="1013" width="1.2146%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="6"/><text x="1.2621%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="1.0121%" y="997" width="1.2146%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="6"/><text x="1.2621%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="1.0121%" y="981" width="1.2146%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="6"/><text x="1.2621%" y="991.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="1.0121%" y="965" width="1.2146%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="6"/><text x="1.2621%" y="975.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="1.0121%" y="949" width="1.2146%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="6"/><text x="1.2621%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.0243%" y="933" width="0.2024%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="2.2743%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.0243%" y="917" width="0.2024%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="1"/><text x="2.2743%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.0243%" y="901" width="0.2024%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="1"/><text x="2.2743%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.0243%" y="885" width="0.2024%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="1"/><text x="2.2743%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.0243%" y="869" width="0.2024%" height="15" fill="rgb(238,160,17)" fg:x="10" fg:w="1"/><text x="2.2743%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.0243%" y="853" width="0.2024%" height="15" fill="rgb(214,148,48)" fg:x="10" fg:w="1"/><text x="2.2743%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.0243%" y="837" width="0.2024%" height="15" fill="rgb(232,36,49)" fg:x="10" fg:w="1"/><text x="2.2743%" y="847.50"></text></g><g><title>__clone3 (1 samples, 0.20%)</title><rect x="2.2267%" y="1045" width="0.2024%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="1"/><text x="2.4767%" y="1055.50"></text></g><g><title>start_thread (1 samples, 0.20%)</title><rect x="2.2267%" y="1029" width="0.2024%" height="15" fill="rgb(229,88,8)" fg:x="11" fg:w="1"/><text x="2.4767%" y="1039.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.20%)</title><rect x="2.2267%" y="1013" width="0.2024%" height="15" fill="rgb(213,181,19)" fg:x="11" fg:w="1"/><text x="2.4767%" y="1023.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.20%)</title><rect x="2.2267%" y="997" width="0.2024%" height="15" fill="rgb(254,191,54)" fg:x="11" fg:w="1"/><text x="2.4767%" y="1007.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.20%)</title><rect x="2.2267%" y="981" width="0.2024%" height="15" fill="rgb(241,83,37)" fg:x="11" fg:w="1"/><text x="2.4767%" y="991.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.20%)</title><rect x="2.2267%" y="965" width="0.2024%" height="15" fill="rgb(233,36,39)" fg:x="11" fg:w="1"/><text x="2.4767%" y="975.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.20%)</title><rect x="2.2267%" y="949" width="0.2024%" height="15" fill="rgb(226,3,54)" fg:x="11" fg:w="1"/><text x="2.4767%" y="959.50"></text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.20%)</title><rect x="2.2267%" y="933" width="0.2024%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="1"/><text x="2.4767%" y="943.50"></text></g><g><title>__GI___sysconf (1 samples, 0.20%)</title><rect x="2.2267%" y="917" width="0.2024%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="1"/><text x="2.4767%" y="927.50"></text></g><g><title>position_map-58 (8 samples, 1.62%)</title><rect x="1.0121%" y="1061" width="1.6194%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="8"/><text x="1.2621%" y="1071.50"></text></g><g><title>_start (1 samples, 0.20%)</title><rect x="2.4291%" y="1045" width="0.2024%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="1"/><text x="2.6791%" y="1055.50"></text></g><g><title>_dl_start (1 samples, 0.20%)</title><rect x="2.4291%" y="1029" width="0.2024%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="1"/><text x="2.6791%" y="1039.50"></text></g><g><title>_dl_start_final (1 samples, 0.20%)</title><rect x="2.4291%" y="1013" width="0.2024%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="1"/><text x="2.6791%" y="1023.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.20%)</title><rect x="2.4291%" y="997" width="0.2024%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="1"/><text x="2.6791%" y="1007.50"></text></g><g><title>dl_main (1 samples, 0.20%)</title><rect x="2.4291%" y="981" width="0.2024%" height="15" fill="rgb(222,207,29)" fg:x="12" fg:w="1"/><text x="2.6791%" y="991.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.20%)</title><rect x="2.4291%" y="965" width="0.2024%" height="15" fill="rgb(206,96,30)" fg:x="12" fg:w="1"/><text x="2.6791%" y="975.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.20%)</title><rect x="2.4291%" y="949" width="0.2024%" height="15" fill="rgb(218,138,4)" fg:x="12" fg:w="1"/><text x="2.6791%" y="959.50"></text></g><g><title>openaux (1 samples, 0.20%)</title><rect x="2.4291%" y="933" width="0.2024%" height="15" fill="rgb(250,191,14)" fg:x="12" fg:w="1"/><text x="2.6791%" y="943.50"></text></g><g><title>_dl_map_object (1 samples, 0.20%)</title><rect x="2.4291%" y="917" width="0.2024%" height="15" fill="rgb(239,60,40)" fg:x="12" fg:w="1"/><text x="2.6791%" y="927.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.20%)</title><rect x="2.4291%" y="901" width="0.2024%" height="15" fill="rgb(206,27,48)" fg:x="12" fg:w="1"/><text x="2.6791%" y="911.50"></text></g><g><title>_dl_map_segments (1 samples, 0.20%)</title><rect x="2.4291%" y="885" width="0.2024%" height="15" fill="rgb(225,35,8)" fg:x="12" fg:w="1"/><text x="2.6791%" y="895.50"></text></g><g><title>__mmap64 (1 samples, 0.20%)</title><rect x="2.4291%" y="869" width="0.2024%" height="15" fill="rgb(250,213,24)" fg:x="12" fg:w="1"/><text x="2.6791%" y="879.50"></text></g><g><title>__mmap64 (1 samples, 0.20%)</title><rect x="2.4291%" y="853" width="0.2024%" height="15" fill="rgb(247,123,22)" fg:x="12" fg:w="1"/><text x="2.6791%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="837" width="0.2024%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="1"/><text x="2.6791%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="821" width="0.2024%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="1"/><text x="2.6791%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="805" width="0.2024%" height="15" fill="rgb(251,118,11)" fg:x="12" fg:w="1"/><text x="2.6791%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="789" width="0.2024%" height="15" fill="rgb(217,147,25)" fg:x="12" fg:w="1"/><text x="2.6791%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="773" width="0.2024%" height="15" fill="rgb(247,81,37)" fg:x="12" fg:w="1"/><text x="2.6791%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="757" width="0.2024%" height="15" fill="rgb(209,12,38)" fg:x="12" fg:w="1"/><text x="2.6791%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="741" width="0.2024%" height="15" fill="rgb(227,1,9)" fg:x="12" fg:w="1"/><text x="2.6791%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="725" width="0.2024%" height="15" fill="rgb(248,47,43)" fg:x="12" fg:w="1"/><text x="2.6791%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="709" width="0.2024%" height="15" fill="rgb(221,10,30)" fg:x="12" fg:w="1"/><text x="2.6791%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="693" width="0.2024%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="1"/><text x="2.6791%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="677" width="0.2024%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="1"/><text x="2.6791%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="661" width="0.2024%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="1"/><text x="2.6791%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="2.4291%" y="645" width="0.2024%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="1"/><text x="2.6791%" y="655.50"></text></g><g><title>rstar::algorithm::removal::DrainIterator&lt;T,R,Params&gt;::pop_node (5 samples, 1.01%)</title><rect x="2.6316%" y="1029" width="1.0121%" height="15" fill="rgb(247,138,52)" fg:x="13" fg:w="5"/><text x="2.8816%" y="1039.50"></text></g><g><title>rstar::algorithm::rstar::choose_subtree (1 samples, 0.20%)</title><rect x="3.6437%" y="1029" width="0.2024%" height="15" fill="rgb(213,79,30)" fg:x="18" fg:w="1"/><text x="3.8937%" y="1039.50"></text></g><g><title>[anon] (14 samples, 2.83%)</title><rect x="2.6316%" y="1045" width="2.8340%" height="15" fill="rgb(246,177,23)" fg:x="13" fg:w="14"/><text x="2.8816%" y="1055.50">[a..</text></g><g><title>rstar::rtree::RTree&lt;T,Params&gt;::remove (8 samples, 1.62%)</title><rect x="3.8462%" y="1029" width="1.6194%" height="15" fill="rgb(230,62,27)" fg:x="19" fg:w="8"/><text x="4.0962%" y="1039.50"></text></g><g><title>[unknown] (57 samples, 11.54%)</title><rect x="5.4656%" y="1029" width="11.5385%" height="15" fill="rgb(216,154,8)" fg:x="27" fg:w="57"/><text x="5.7156%" y="1039.50">[unknown]</text></g><g><title>[unknown] (57 samples, 11.54%)</title><rect x="5.4656%" y="1013" width="11.5385%" height="15" fill="rgb(244,35,45)" fg:x="27" fg:w="57"/><text x="5.7156%" y="1023.50">[unknown]</text></g><g><title>[unknown] (57 samples, 11.54%)</title><rect x="5.4656%" y="997" width="11.5385%" height="15" fill="rgb(251,115,12)" fg:x="27" fg:w="57"/><text x="5.7156%" y="1007.50">[unknown]</text></g><g><title>[unknown] (57 samples, 11.54%)</title><rect x="5.4656%" y="981" width="11.5385%" height="15" fill="rgb(240,54,50)" fg:x="27" fg:w="57"/><text x="5.7156%" y="991.50">[unknown]</text></g><g><title>[unknown] (57 samples, 11.54%)</title><rect x="5.4656%" y="965" width="11.5385%" height="15" fill="rgb(233,84,52)" fg:x="27" fg:w="57"/><text x="5.7156%" y="975.50">[unknown]</text></g><g><title>[unknown] (57 samples, 11.54%)</title><rect x="5.4656%" y="949" width="11.5385%" height="15" fill="rgb(207,117,47)" fg:x="27" fg:w="57"/><text x="5.7156%" y="959.50">[unknown]</text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="16.5992%" y="933" width="0.4049%" height="15" fill="rgb(249,43,39)" fg:x="82" fg:w="2"/><text x="16.8492%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="16.5992%" y="917" width="0.4049%" height="15" fill="rgb(209,38,44)" fg:x="82" fg:w="2"/><text x="16.8492%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="16.5992%" y="901" width="0.4049%" height="15" fill="rgb(236,212,23)" fg:x="82" fg:w="2"/><text x="16.8492%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="16.5992%" y="885" width="0.4049%" height="15" fill="rgb(242,79,21)" fg:x="82" fg:w="2"/><text x="16.8492%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="16.5992%" y="869" width="0.4049%" height="15" fill="rgb(211,96,35)" fg:x="82" fg:w="2"/><text x="16.8492%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="16.8016%" y="853" width="0.2024%" height="15" fill="rgb(253,215,40)" fg:x="83" fg:w="1"/><text x="17.0516%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="16.8016%" y="837" width="0.2024%" height="15" fill="rgb(211,81,21)" fg:x="83" fg:w="1"/><text x="17.0516%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="16.8016%" y="821" width="0.2024%" height="15" fill="rgb(208,190,38)" fg:x="83" fg:w="1"/><text x="17.0516%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="16.8016%" y="805" width="0.2024%" height="15" fill="rgb(235,213,38)" fg:x="83" fg:w="1"/><text x="17.0516%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="16.8016%" y="789" width="0.2024%" height="15" fill="rgb(237,122,38)" fg:x="83" fg:w="1"/><text x="17.0516%" y="799.50"></text></g><g><title>[unknown] (60 samples, 12.15%)</title><rect x="5.4656%" y="1045" width="12.1457%" height="15" fill="rgb(244,218,35)" fg:x="27" fg:w="60"/><text x="5.7156%" y="1055.50">[unknown]</text></g><g><title>rstar::algorithm::removal::DrainIterator&lt;T,R,Params&gt;::pop_node (3 samples, 0.61%)</title><rect x="17.0040%" y="1029" width="0.6073%" height="15" fill="rgb(240,68,47)" fg:x="84" fg:w="3"/><text x="17.2540%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="17.6113%" y="1029" width="0.4049%" height="15" fill="rgb(210,16,53)" fg:x="87" fg:w="2"/><text x="17.8613%" y="1039.50"></text></g><g><title>[unknown] (4 samples, 0.81%)</title><rect x="18.0162%" y="1013" width="0.8097%" height="15" fill="rgb(235,124,12)" fg:x="89" fg:w="4"/><text x="18.2662%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="18.4211%" y="997" width="0.4049%" height="15" fill="rgb(224,169,11)" fg:x="91" fg:w="2"/><text x="18.6711%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="18.4211%" y="981" width="0.4049%" height="15" fill="rgb(250,166,2)" fg:x="91" fg:w="2"/><text x="18.6711%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="18.6235%" y="965" width="0.2024%" height="15" fill="rgb(242,216,29)" fg:x="92" fg:w="1"/><text x="18.8735%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="18.6235%" y="949" width="0.2024%" height="15" fill="rgb(230,116,27)" fg:x="92" fg:w="1"/><text x="18.8735%" y="959.50"></text></g><g><title>__GI___nptl_deallocate_tsd (1 samples, 0.20%)</title><rect x="18.8259%" y="1013" width="0.2024%" height="15" fill="rgb(228,99,48)" fg:x="93" fg:w="1"/><text x="19.0759%" y="1023.50"></text></g><g><title>__GI___nptl_deallocate_tsd (1 samples, 0.20%)</title><rect x="18.8259%" y="997" width="0.2024%" height="15" fill="rgb(253,11,6)" fg:x="93" fg:w="1"/><text x="19.0759%" y="1007.50"></text></g><g><title>mi_pthread_done (1 samples, 0.20%)</title><rect x="18.8259%" y="981" width="0.2024%" height="15" fill="rgb(247,143,39)" fg:x="93" fg:w="1"/><text x="19.0759%" y="991.50"></text></g><g><title>mi_heap_collect_ex (1 samples, 0.20%)</title><rect x="18.8259%" y="965" width="0.2024%" height="15" fill="rgb(236,97,10)" fg:x="93" fg:w="1"/><text x="19.0759%" y="975.50"></text></g><g><title>_mi_abandoned_collect (1 samples, 0.20%)</title><rect x="18.8259%" y="949" width="0.2024%" height="15" fill="rgb(233,208,19)" fg:x="93" fg:w="1"/><text x="19.0759%" y="959.50"></text></g><g><title>_mi_clock_now (1 samples, 0.20%)</title><rect x="18.8259%" y="933" width="0.2024%" height="15" fill="rgb(216,164,2)" fg:x="93" fg:w="1"/><text x="19.0759%" y="943.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.20%)</title><rect x="18.8259%" y="917" width="0.2024%" height="15" fill="rgb(220,129,5)" fg:x="93" fg:w="1"/><text x="19.0759%" y="927.50"></text></g><g><title>[[vdso]] (1 samples, 0.20%)</title><rect x="18.8259%" y="901" width="0.2024%" height="15" fill="rgb(242,17,10)" fg:x="93" fg:w="1"/><text x="19.0759%" y="911.50"></text></g><g><title>[[vdso]] (1 samples, 0.20%)</title><rect x="18.8259%" y="885" width="0.2024%" height="15" fill="rgb(242,107,0)" fg:x="93" fg:w="1"/><text x="19.0759%" y="895.50"></text></g><g><title>[libc.so.6] (18 samples, 3.64%)</title><rect x="19.0283%" y="837" width="3.6437%" height="15" fill="rgb(251,28,31)" fg:x="94" fg:w="18"/><text x="19.2783%" y="847.50">[lib..</text></g><g><title>[unknown] (18 samples, 3.64%)</title><rect x="19.0283%" y="821" width="3.6437%" height="15" fill="rgb(233,223,10)" fg:x="94" fg:w="18"/><text x="19.2783%" y="831.50">[unk..</text></g><g><title>[unknown] (18 samples, 3.64%)</title><rect x="19.0283%" y="805" width="3.6437%" height="15" fill="rgb(215,21,27)" fg:x="94" fg:w="18"/><text x="19.2783%" y="815.50">[unk..</text></g><g><title>[unknown] (18 samples, 3.64%)</title><rect x="19.0283%" y="789" width="3.6437%" height="15" fill="rgb(232,23,21)" fg:x="94" fg:w="18"/><text x="19.2783%" y="799.50">[unk..</text></g><g><title>[unknown] (17 samples, 3.44%)</title><rect x="19.2308%" y="773" width="3.4413%" height="15" fill="rgb(244,5,23)" fg:x="95" fg:w="17"/><text x="19.4808%" y="783.50">[un..</text></g><g><title>[unknown] (17 samples, 3.44%)</title><rect x="19.2308%" y="757" width="3.4413%" height="15" fill="rgb(226,81,46)" fg:x="95" fg:w="17"/><text x="19.4808%" y="767.50">[un..</text></g><g><title>[unknown] (17 samples, 3.44%)</title><rect x="19.2308%" y="741" width="3.4413%" height="15" fill="rgb(247,70,30)" fg:x="95" fg:w="17"/><text x="19.4808%" y="751.50">[un..</text></g><g><title>[unknown] (17 samples, 3.44%)</title><rect x="19.2308%" y="725" width="3.4413%" height="15" fill="rgb(212,68,19)" fg:x="95" fg:w="17"/><text x="19.4808%" y="735.50">[un..</text></g><g><title>[unknown] (17 samples, 3.44%)</title><rect x="19.2308%" y="709" width="3.4413%" height="15" fill="rgb(240,187,13)" fg:x="95" fg:w="17"/><text x="19.4808%" y="719.50">[un..</text></g><g><title>[unknown] (17 samples, 3.44%)</title><rect x="19.2308%" y="693" width="3.4413%" height="15" fill="rgb(223,113,26)" fg:x="95" fg:w="17"/><text x="19.4808%" y="703.50">[un..</text></g><g><title>[unknown] (15 samples, 3.04%)</title><rect x="19.6356%" y="677" width="3.0364%" height="15" fill="rgb(206,192,2)" fg:x="97" fg:w="15"/><text x="19.8856%" y="687.50">[un..</text></g><g><title>[unknown] (15 samples, 3.04%)</title><rect x="19.6356%" y="661" width="3.0364%" height="15" fill="rgb(241,108,4)" fg:x="97" fg:w="15"/><text x="19.8856%" y="671.50">[un..</text></g><g><title>[unknown] (15 samples, 3.04%)</title><rect x="19.6356%" y="645" width="3.0364%" height="15" fill="rgb(247,173,49)" fg:x="97" fg:w="15"/><text x="19.8856%" y="655.50">[un..</text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="22.6721%" y="837" width="1.2146%" height="15" fill="rgb(224,114,35)" fg:x="112" fg:w="6"/><text x="22.9221%" y="847.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="22.6721%" y="821" width="1.2146%" height="15" fill="rgb(245,159,27)" fg:x="112" fg:w="6"/><text x="22.9221%" y="831.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="22.6721%" y="805" width="1.2146%" height="15" fill="rgb(245,172,44)" fg:x="112" fg:w="6"/><text x="22.9221%" y="815.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="22.6721%" y="789" width="1.2146%" height="15" fill="rgb(236,23,11)" fg:x="112" fg:w="6"/><text x="22.9221%" y="799.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="22.6721%" y="773" width="1.2146%" height="15" fill="rgb(205,117,38)" fg:x="112" fg:w="6"/><text x="22.9221%" y="783.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="22.6721%" y="757" width="1.2146%" height="15" fill="rgb(237,72,25)" fg:x="112" fg:w="6"/><text x="22.9221%" y="767.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="22.6721%" y="741" width="1.2146%" height="15" fill="rgb(244,70,9)" fg:x="112" fg:w="6"/><text x="22.9221%" y="751.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="22.6721%" y="725" width="1.2146%" height="15" fill="rgb(217,125,39)" fg:x="112" fg:w="6"/><text x="22.9221%" y="735.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="22.8745%" y="709" width="1.0121%" height="15" fill="rgb(235,36,10)" fg:x="113" fg:w="5"/><text x="23.1245%" y="719.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="22.8745%" y="693" width="1.0121%" height="15" fill="rgb(251,123,47)" fg:x="113" fg:w="5"/><text x="23.1245%" y="703.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="22.8745%" y="677" width="1.0121%" height="15" fill="rgb(221,13,13)" fg:x="113" fg:w="5"/><text x="23.1245%" y="687.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="22.8745%" y="661" width="1.0121%" height="15" fill="rgb(238,131,9)" fg:x="113" fg:w="5"/><text x="23.1245%" y="671.50"></text></g><g><title>_mi_arena_alloc_aligned (6 samples, 1.21%)</title><rect x="23.8866%" y="837" width="1.2146%" height="15" fill="rgb(211,50,8)" fg:x="118" fg:w="6"/><text x="24.1366%" y="847.50"></text></g><g><title>_mi_os_alloc_aligned (6 samples, 1.21%)</title><rect x="23.8866%" y="821" width="1.2146%" height="15" fill="rgb(245,182,24)" fg:x="118" fg:w="6"/><text x="24.1366%" y="831.50"></text></g><g><title>mi_unix_mmap (6 samples, 1.21%)</title><rect x="23.8866%" y="805" width="1.2146%" height="15" fill="rgb(242,14,37)" fg:x="118" fg:w="6"/><text x="24.1366%" y="815.50"></text></g><g><title>__GI___mmap64 (6 samples, 1.21%)</title><rect x="23.8866%" y="789" width="1.2146%" height="15" fill="rgb(246,228,12)" fg:x="118" fg:w="6"/><text x="24.1366%" y="799.50"></text></g><g><title>__GI___mmap64 (6 samples, 1.21%)</title><rect x="23.8866%" y="773" width="1.2146%" height="15" fill="rgb(213,55,15)" fg:x="118" fg:w="6"/><text x="24.1366%" y="783.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="757" width="1.2146%" height="15" fill="rgb(209,9,3)" fg:x="118" fg:w="6"/><text x="24.1366%" y="767.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="741" width="1.2146%" height="15" fill="rgb(230,59,30)" fg:x="118" fg:w="6"/><text x="24.1366%" y="751.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="725" width="1.2146%" height="15" fill="rgb(209,121,21)" fg:x="118" fg:w="6"/><text x="24.1366%" y="735.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="709" width="1.2146%" height="15" fill="rgb(220,109,13)" fg:x="118" fg:w="6"/><text x="24.1366%" y="719.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="693" width="1.2146%" height="15" fill="rgb(232,18,1)" fg:x="118" fg:w="6"/><text x="24.1366%" y="703.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="677" width="1.2146%" height="15" fill="rgb(215,41,42)" fg:x="118" fg:w="6"/><text x="24.1366%" y="687.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="661" width="1.2146%" height="15" fill="rgb(224,123,36)" fg:x="118" fg:w="6"/><text x="24.1366%" y="671.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="645" width="1.2146%" height="15" fill="rgb(240,125,3)" fg:x="118" fg:w="6"/><text x="24.1366%" y="655.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="629" width="1.2146%" height="15" fill="rgb(205,98,50)" fg:x="118" fg:w="6"/><text x="24.1366%" y="639.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="613" width="1.2146%" height="15" fill="rgb(205,185,37)" fg:x="118" fg:w="6"/><text x="24.1366%" y="623.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="23.8866%" y="597" width="1.2146%" height="15" fill="rgb(238,207,15)" fg:x="118" fg:w="6"/><text x="24.1366%" y="607.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="24.0891%" y="581" width="1.0121%" height="15" fill="rgb(213,199,42)" fg:x="119" fg:w="5"/><text x="24.3391%" y="591.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="24.0891%" y="565" width="1.0121%" height="15" fill="rgb(235,201,11)" fg:x="119" fg:w="5"/><text x="24.3391%" y="575.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="24.0891%" y="549" width="1.0121%" height="15" fill="rgb(207,46,11)" fg:x="119" fg:w="5"/><text x="24.3391%" y="559.50"></text></g><g><title>mi_page_queue_find_free_ex (36 samples, 7.29%)</title><rect x="19.0283%" y="901" width="7.2874%" height="15" fill="rgb(241,35,35)" fg:x="94" fg:w="36"/><text x="19.2783%" y="911.50">mi_page_qu..</text></g><g><title>mi_page_fresh_alloc (36 samples, 7.29%)</title><rect x="19.0283%" y="885" width="7.2874%" height="15" fill="rgb(243,32,47)" fg:x="94" fg:w="36"/><text x="19.2783%" y="895.50">mi_page_fr..</text></g><g><title>mi_segments_page_alloc.constprop.1 (36 samples, 7.29%)</title><rect x="19.0283%" y="869" width="7.2874%" height="15" fill="rgb(247,202,23)" fg:x="94" fg:w="36"/><text x="19.2783%" y="879.50">mi_segment..</text></g><g><title>mi_segment_init.constprop.0 (36 samples, 7.29%)</title><rect x="19.0283%" y="853" width="7.2874%" height="15" fill="rgb(219,102,11)" fg:x="94" fg:w="36"/><text x="19.2783%" y="863.50">mi_segment..</text></g><g><title>mi_segment_span_allocate.isra.0 (6 samples, 1.21%)</title><rect x="25.1012%" y="837" width="1.2146%" height="15" fill="rgb(243,110,44)" fg:x="124" fg:w="6"/><text x="25.3512%" y="847.50"></text></g><g><title>mi_segment_commitx (6 samples, 1.21%)</title><rect x="25.1012%" y="821" width="1.2146%" height="15" fill="rgb(222,74,54)" fg:x="124" fg:w="6"/><text x="25.3512%" y="831.50"></text></g><g><title>_mi_os_commit (6 samples, 1.21%)</title><rect x="25.1012%" y="805" width="1.2146%" height="15" fill="rgb(216,99,12)" fg:x="124" fg:w="6"/><text x="25.3512%" y="815.50"></text></g><g><title>__GI___mprotect (6 samples, 1.21%)</title><rect x="25.1012%" y="789" width="1.2146%" height="15" fill="rgb(226,22,26)" fg:x="124" fg:w="6"/><text x="25.3512%" y="799.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="25.1012%" y="773" width="1.2146%" height="15" fill="rgb(217,163,10)" fg:x="124" fg:w="6"/><text x="25.3512%" y="783.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="25.1012%" y="757" width="1.2146%" height="15" fill="rgb(213,25,53)" fg:x="124" fg:w="6"/><text x="25.3512%" y="767.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="25.1012%" y="741" width="1.2146%" height="15" fill="rgb(252,105,26)" fg:x="124" fg:w="6"/><text x="25.3512%" y="751.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="25.1012%" y="725" width="1.2146%" height="15" fill="rgb(220,39,43)" fg:x="124" fg:w="6"/><text x="25.3512%" y="735.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="25.1012%" y="709" width="1.2146%" height="15" fill="rgb(229,68,48)" fg:x="124" fg:w="6"/><text x="25.3512%" y="719.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="25.1012%" y="693" width="1.2146%" height="15" fill="rgb(252,8,32)" fg:x="124" fg:w="6"/><text x="25.3512%" y="703.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="25.1012%" y="677" width="1.2146%" height="15" fill="rgb(223,20,43)" fg:x="124" fg:w="6"/><text x="25.3512%" y="687.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="25.3036%" y="661" width="1.0121%" height="15" fill="rgb(229,81,49)" fg:x="125" fg:w="5"/><text x="25.5536%" y="671.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="25.3036%" y="645" width="1.0121%" height="15" fill="rgb(236,28,36)" fg:x="125" fg:w="5"/><text x="25.5536%" y="655.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="25.3036%" y="629" width="1.0121%" height="15" fill="rgb(249,185,26)" fg:x="125" fg:w="5"/><text x="25.5536%" y="639.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="25.3036%" y="613" width="1.0121%" height="15" fill="rgb(249,174,33)" fg:x="125" fg:w="5"/><text x="25.5536%" y="623.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="25.3036%" y="597" width="1.0121%" height="15" fill="rgb(233,201,37)" fg:x="125" fg:w="5"/><text x="25.5536%" y="607.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="25.3036%" y="581" width="1.0121%" height="15" fill="rgb(221,78,26)" fg:x="125" fg:w="5"/><text x="25.5536%" y="591.50"></text></g><g><title>_mi_malloc_generic (42 samples, 8.50%)</title><rect x="19.0283%" y="917" width="8.5020%" height="15" fill="rgb(250,127,30)" fg:x="94" fg:w="42"/><text x="19.2783%" y="927.50">_mi_malloc_g..</text></g><g><title>mi_thread_init (6 samples, 1.21%)</title><rect x="26.3158%" y="901" width="1.2146%" height="15" fill="rgb(230,49,44)" fg:x="130" fg:w="6"/><text x="26.5658%" y="911.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="26.3158%" y="885" width="1.2146%" height="15" fill="rgb(229,67,23)" fg:x="130" fg:w="6"/><text x="26.5658%" y="895.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="26.3158%" y="869" width="1.2146%" height="15" fill="rgb(249,83,47)" fg:x="130" fg:w="6"/><text x="26.5658%" y="879.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="26.3158%" y="853" width="1.2146%" height="15" fill="rgb(215,43,3)" fg:x="130" fg:w="6"/><text x="26.5658%" y="863.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="26.3158%" y="837" width="1.2146%" height="15" fill="rgb(238,154,13)" fg:x="130" fg:w="6"/><text x="26.5658%" y="847.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="26.3158%" y="821" width="1.2146%" height="15" fill="rgb(219,56,2)" fg:x="130" fg:w="6"/><text x="26.5658%" y="831.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="26.3158%" y="805" width="1.2146%" height="15" fill="rgb(233,0,4)" fg:x="130" fg:w="6"/><text x="26.5658%" y="815.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="26.3158%" y="789" width="1.2146%" height="15" fill="rgb(235,30,7)" fg:x="130" fg:w="6"/><text x="26.5658%" y="799.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="26.5182%" y="773" width="1.0121%" height="15" fill="rgb(250,79,13)" fg:x="131" fg:w="5"/><text x="26.7682%" y="783.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="26.5182%" y="757" width="1.0121%" height="15" fill="rgb(211,146,34)" fg:x="131" fg:w="5"/><text x="26.7682%" y="767.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="26.5182%" y="741" width="1.0121%" height="15" fill="rgb(228,22,38)" fg:x="131" fg:w="5"/><text x="26.7682%" y="751.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="26.5182%" y="725" width="1.0121%" height="15" fill="rgb(235,168,5)" fg:x="131" fg:w="5"/><text x="26.7682%" y="735.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="26.5182%" y="709" width="1.0121%" height="15" fill="rgb(221,155,16)" fg:x="131" fg:w="5"/><text x="26.7682%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.20%)</title><rect x="27.5304%" y="869" width="0.2024%" height="15" fill="rgb(215,215,53)" fg:x="136" fg:w="1"/><text x="27.7804%" y="879.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="27.5304%" y="853" width="0.2024%" height="15" fill="rgb(223,4,10)" fg:x="136" fg:w="1"/><text x="27.7804%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="27.5304%" y="837" width="0.2024%" height="15" fill="rgb(234,103,6)" fg:x="136" fg:w="1"/><text x="27.7804%" y="847.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="27.5304%" y="821" width="0.2024%" height="15" fill="rgb(227,97,0)" fg:x="136" fg:w="1"/><text x="27.7804%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="27.5304%" y="805" width="0.2024%" height="15" fill="rgb(234,150,53)" fg:x="136" fg:w="1"/><text x="27.7804%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="27.5304%" y="789" width="0.2024%" height="15" fill="rgb(228,201,54)" fg:x="136" fg:w="1"/><text x="27.7804%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="27.5304%" y="773" width="0.2024%" height="15" fill="rgb(222,22,37)" fg:x="136" fg:w="1"/><text x="27.7804%" y="783.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.20%)</title><rect x="27.5304%" y="757" width="0.2024%" height="15" fill="rgb(237,53,32)" fg:x="136" fg:w="1"/><text x="27.7804%" y="767.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.20%)</title><rect x="27.5304%" y="741" width="0.2024%" height="15" fill="rgb(233,25,53)" fg:x="136" fg:w="1"/><text x="27.7804%" y="751.50"></text></g><g><title>syscall (1 samples, 0.20%)</title><rect x="27.5304%" y="725" width="0.2024%" height="15" fill="rgb(210,40,34)" fg:x="136" fg:w="1"/><text x="27.7804%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="709" width="0.2024%" height="15" fill="rgb(241,220,44)" fg:x="136" fg:w="1"/><text x="27.7804%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="693" width="0.2024%" height="15" fill="rgb(235,28,35)" fg:x="136" fg:w="1"/><text x="27.7804%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="677" width="0.2024%" height="15" fill="rgb(210,56,17)" fg:x="136" fg:w="1"/><text x="27.7804%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="661" width="0.2024%" height="15" fill="rgb(224,130,29)" fg:x="136" fg:w="1"/><text x="27.7804%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="645" width="0.2024%" height="15" fill="rgb(235,212,8)" fg:x="136" fg:w="1"/><text x="27.7804%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="629" width="0.2024%" height="15" fill="rgb(223,33,50)" fg:x="136" fg:w="1"/><text x="27.7804%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="613" width="0.2024%" height="15" fill="rgb(219,149,13)" fg:x="136" fg:w="1"/><text x="27.7804%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="597" width="0.2024%" height="15" fill="rgb(250,156,29)" fg:x="136" fg:w="1"/><text x="27.7804%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="581" width="0.2024%" height="15" fill="rgb(216,193,19)" fg:x="136" fg:w="1"/><text x="27.7804%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="565" width="0.2024%" height="15" fill="rgb(216,135,14)" fg:x="136" fg:w="1"/><text x="27.7804%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.5304%" y="549" width="0.2024%" height="15" fill="rgb(241,47,5)" fg:x="136" fg:w="1"/><text x="27.7804%" y="559.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.20%)</title><rect x="27.7328%" y="837" width="0.2024%" height="15" fill="rgb(233,42,35)" fg:x="137" fg:w="1"/><text x="27.9828%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="27.7328%" y="821" width="0.2024%" height="15" fill="rgb(231,13,6)" fg:x="137" fg:w="1"/><text x="27.9828%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="27.7328%" y="805" width="0.2024%" height="15" fill="rgb(207,181,40)" fg:x="137" fg:w="1"/><text x="27.9828%" y="815.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.20%)</title><rect x="27.7328%" y="789" width="0.2024%" height="15" fill="rgb(254,173,49)" fg:x="137" fg:w="1"/><text x="27.9828%" y="799.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.20%)</title><rect x="27.7328%" y="773" width="0.2024%" height="15" fill="rgb(221,1,38)" fg:x="137" fg:w="1"/><text x="27.9828%" y="783.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="27.7328%" y="757" width="0.2024%" height="15" fill="rgb(206,124,46)" fg:x="137" fg:w="1"/><text x="27.9828%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="27.7328%" y="741" width="0.2024%" height="15" fill="rgb(249,21,11)" fg:x="137" fg:w="1"/><text x="27.9828%" y="751.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="27.7328%" y="725" width="0.2024%" height="15" fill="rgb(222,201,40)" fg:x="137" fg:w="1"/><text x="27.9828%" y="735.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="27.7328%" y="709" width="0.2024%" height="15" fill="rgb(235,61,29)" fg:x="137" fg:w="1"/><text x="27.9828%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="27.7328%" y="693" width="0.2024%" height="15" fill="rgb(219,207,3)" fg:x="137" fg:w="1"/><text x="27.9828%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="27.7328%" y="677" width="0.2024%" height="15" fill="rgb(222,56,46)" fg:x="137" fg:w="1"/><text x="27.9828%" y="687.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.20%)</title><rect x="27.7328%" y="661" width="0.2024%" height="15" fill="rgb(239,76,54)" fg:x="137" fg:w="1"/><text x="27.9828%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="27.7328%" y="645" width="0.2024%" height="15" fill="rgb(231,124,27)" fg:x="137" fg:w="1"/><text x="27.9828%" y="655.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="27.7328%" y="629" width="0.2024%" height="15" fill="rgb(249,195,6)" fg:x="137" fg:w="1"/><text x="27.9828%" y="639.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="27.7328%" y="613" width="0.2024%" height="15" fill="rgb(237,174,47)" fg:x="137" fg:w="1"/><text x="27.9828%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="27.7328%" y="597" width="0.2024%" height="15" fill="rgb(206,201,31)" fg:x="137" fg:w="1"/><text x="27.9828%" y="607.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="27.7328%" y="581" width="0.2024%" height="15" fill="rgb(231,57,52)" fg:x="137" fg:w="1"/><text x="27.9828%" y="591.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.20%)</title><rect x="27.9352%" y="837" width="0.2024%" height="15" fill="rgb(248,177,22)" fg:x="138" fg:w="1"/><text x="28.1852%" y="847.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.20%)</title><rect x="27.9352%" y="821" width="0.2024%" height="15" fill="rgb(215,211,37)" fg:x="138" fg:w="1"/><text x="28.1852%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="27.9352%" y="805" width="0.2024%" height="15" fill="rgb(241,128,51)" fg:x="138" fg:w="1"/><text x="28.1852%" y="815.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.20%)</title><rect x="28.1377%" y="661" width="0.2024%" height="15" fill="rgb(227,165,31)" fg:x="139" fg:w="1"/><text x="28.3877%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="28.1377%" y="645" width="0.2024%" height="15" fill="rgb(228,167,24)" fg:x="139" fg:w="1"/><text x="28.3877%" y="655.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="28.1377%" y="629" width="0.2024%" height="15" fill="rgb(228,143,12)" fg:x="139" fg:w="1"/><text x="28.3877%" y="639.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.20%)</title><rect x="28.1377%" y="613" width="0.2024%" height="15" fill="rgb(249,149,8)" fg:x="139" fg:w="1"/><text x="28.3877%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="28.1377%" y="597" width="0.2024%" height="15" fill="rgb(243,35,44)" fg:x="139" fg:w="1"/><text x="28.3877%" y="607.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="28.1377%" y="581" width="0.2024%" height="15" fill="rgb(246,89,9)" fg:x="139" fg:w="1"/><text x="28.3877%" y="591.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.20%)</title><rect x="28.1377%" y="565" width="0.2024%" height="15" fill="rgb(233,213,13)" fg:x="139" fg:w="1"/><text x="28.3877%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="28.1377%" y="549" width="0.2024%" height="15" fill="rgb(233,141,41)" fg:x="139" fg:w="1"/><text x="28.3877%" y="559.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="28.1377%" y="533" width="0.2024%" height="15" fill="rgb(239,167,4)" fg:x="139" fg:w="1"/><text x="28.3877%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.20%)</title><rect x="28.1377%" y="517" width="0.2024%" height="15" fill="rgb(209,217,16)" fg:x="139" fg:w="1"/><text x="28.3877%" y="527.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 0.40%)</title><rect x="28.1377%" y="773" width="0.4049%" height="15" fill="rgb(219,88,35)" fg:x="139" fg:w="2"/><text x="28.3877%" y="783.50"></text></g><g><title>std::panicking::try (2 samples, 0.40%)</title><rect x="28.1377%" y="757" width="0.4049%" height="15" fill="rgb(220,193,23)" fg:x="139" fg:w="2"/><text x="28.3877%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.40%)</title><rect x="28.1377%" y="741" width="0.4049%" height="15" fill="rgb(230,90,52)" fg:x="139" fg:w="2"/><text x="28.3877%" y="751.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.40%)</title><rect x="28.1377%" y="725" width="0.4049%" height="15" fill="rgb(252,106,19)" fg:x="139" fg:w="2"/><text x="28.3877%" y="735.50"></text></g><g><title>std::panicking::try (2 samples, 0.40%)</title><rect x="28.1377%" y="709" width="0.4049%" height="15" fill="rgb(206,74,20)" fg:x="139" fg:w="2"/><text x="28.3877%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.40%)</title><rect x="28.1377%" y="693" width="0.4049%" height="15" fill="rgb(230,138,44)" fg:x="139" fg:w="2"/><text x="28.3877%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.40%)</title><rect x="28.1377%" y="677" width="0.4049%" height="15" fill="rgb(235,182,43)" fg:x="139" fg:w="2"/><text x="28.3877%" y="687.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.20%)</title><rect x="28.3401%" y="661" width="0.2024%" height="15" fill="rgb(242,16,51)" fg:x="140" fg:w="1"/><text x="28.5901%" y="671.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.20%)</title><rect x="28.3401%" y="645" width="0.2024%" height="15" fill="rgb(248,9,4)" fg:x="140" fg:w="1"/><text x="28.5901%" y="655.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="28.3401%" y="629" width="0.2024%" height="15" fill="rgb(210,31,22)" fg:x="140" fg:w="1"/><text x="28.5901%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.20%)</title><rect x="28.3401%" y="613" width="0.2024%" height="15" fill="rgb(239,54,39)" fg:x="140" fg:w="1"/><text x="28.5901%" y="623.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.20%)</title><rect x="28.3401%" y="597" width="0.2024%" height="15" fill="rgb(230,99,41)" fg:x="140" fg:w="1"/><text x="28.5901%" y="607.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.20%)</title><rect x="28.3401%" y="581" width="0.2024%" height="15" fill="rgb(253,106,12)" fg:x="140" fg:w="1"/><text x="28.5901%" y="591.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.20%)</title><rect x="28.3401%" y="565" width="0.2024%" height="15" fill="rgb(213,46,41)" fg:x="140" fg:w="1"/><text x="28.5901%" y="575.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.20%)</title><rect x="28.3401%" y="549" width="0.2024%" height="15" fill="rgb(215,133,35)" fg:x="140" fg:w="1"/><text x="28.5901%" y="559.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.20%)</title><rect x="28.3401%" y="533" width="0.2024%" height="15" fill="rgb(213,28,5)" fg:x="140" fg:w="1"/><text x="28.5901%" y="543.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1 samples, 0.20%)</title><rect x="28.3401%" y="517" width="0.2024%" height="15" fill="rgb(215,77,49)" fg:x="140" fg:w="1"/><text x="28.5901%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3 samples, 0.61%)</title><rect x="28.1377%" y="789" width="0.6073%" height="15" fill="rgb(248,100,22)" fg:x="139" fg:w="3"/><text x="28.3877%" y="799.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.20%)</title><rect x="28.5425%" y="773" width="0.2024%" height="15" fill="rgb(208,67,9)" fg:x="141" fg:w="1"/><text x="28.7925%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.5425%" y="757" width="0.2024%" height="15" fill="rgb(219,133,21)" fg:x="141" fg:w="1"/><text x="28.7925%" y="767.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8 samples, 1.62%)</title><rect x="27.5304%" y="901" width="1.6194%" height="15" fill="rgb(246,46,29)" fg:x="136" fg:w="8"/><text x="27.7804%" y="911.50"></text></g><g><title>std::panicking::try (8 samples, 1.62%)</title><rect x="27.5304%" y="885" width="1.6194%" height="15" fill="rgb(246,185,52)" fg:x="136" fg:w="8"/><text x="27.7804%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 1.42%)</title><rect x="27.7328%" y="869" width="1.4170%" height="15" fill="rgb(252,136,11)" fg:x="137" fg:w="7"/><text x="27.9828%" y="879.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 1.42%)</title><rect x="27.7328%" y="853" width="1.4170%" height="15" fill="rgb(219,138,53)" fg:x="137" fg:w="7"/><text x="27.9828%" y="863.50"></text></g><g><title>std::panicking::try (5 samples, 1.01%)</title><rect x="28.1377%" y="837" width="1.0121%" height="15" fill="rgb(211,51,23)" fg:x="139" fg:w="5"/><text x="28.3877%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 1.01%)</title><rect x="28.1377%" y="821" width="1.0121%" height="15" fill="rgb(247,221,28)" fg:x="139" fg:w="5"/><text x="28.3877%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 1.01%)</title><rect x="28.1377%" y="805" width="1.0121%" height="15" fill="rgb(251,222,45)" fg:x="139" fg:w="5"/><text x="28.3877%" y="815.50"></text></g><g><title>std::panicking::try (2 samples, 0.40%)</title><rect x="28.7449%" y="789" width="0.4049%" height="15" fill="rgb(217,162,53)" fg:x="142" fg:w="2"/><text x="28.9949%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.40%)</title><rect x="28.7449%" y="773" width="0.4049%" height="15" fill="rgb(229,93,14)" fg:x="142" fg:w="2"/><text x="28.9949%" y="783.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.40%)</title><rect x="28.7449%" y="757" width="0.4049%" height="15" fill="rgb(209,67,49)" fg:x="142" fg:w="2"/><text x="28.9949%" y="767.50"></text></g><g><title>std::panicking::try (2 samples, 0.40%)</title><rect x="28.7449%" y="741" width="0.4049%" height="15" fill="rgb(213,87,29)" fg:x="142" fg:w="2"/><text x="28.9949%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.40%)</title><rect x="28.7449%" y="725" width="0.4049%" height="15" fill="rgb(205,151,52)" fg:x="142" fg:w="2"/><text x="28.9949%" y="735.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.40%)</title><rect x="28.7449%" y="709" width="0.4049%" height="15" fill="rgb(253,215,39)" fg:x="142" fg:w="2"/><text x="28.9949%" y="719.50"></text></g><g><title>std::panicking::try (2 samples, 0.40%)</title><rect x="28.7449%" y="693" width="0.4049%" height="15" fill="rgb(221,220,41)" fg:x="142" fg:w="2"/><text x="28.9949%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.40%)</title><rect x="28.7449%" y="677" width="0.4049%" height="15" fill="rgb(218,133,21)" fg:x="142" fg:w="2"/><text x="28.9949%" y="687.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.40%)</title><rect x="28.7449%" y="661" width="0.4049%" height="15" fill="rgb(221,193,43)" fg:x="142" fg:w="2"/><text x="28.9949%" y="671.50"></text></g><g><title>std::panicking::try (2 samples, 0.40%)</title><rect x="28.7449%" y="645" width="0.4049%" height="15" fill="rgb(240,128,52)" fg:x="142" fg:w="2"/><text x="28.9949%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.40%)</title><rect x="28.7449%" y="629" width="0.4049%" height="15" fill="rgb(253,114,12)" fg:x="142" fg:w="2"/><text x="28.9949%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.40%)</title><rect x="28.7449%" y="613" width="0.4049%" height="15" fill="rgb(215,223,47)" fg:x="142" fg:w="2"/><text x="28.9949%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.20%)</title><rect x="28.9474%" y="597" width="0.2024%" height="15" fill="rgb(248,225,23)" fg:x="143" fg:w="1"/><text x="29.1974%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.20%)</title><rect x="28.9474%" y="581" width="0.2024%" height="15" fill="rgb(250,108,0)" fg:x="143" fg:w="1"/><text x="29.1974%" y="591.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.20%)</title><rect x="28.9474%" y="565" width="0.2024%" height="15" fill="rgb(228,208,7)" fg:x="143" fg:w="1"/><text x="29.1974%" y="575.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.20%)</title><rect x="28.9474%" y="549" width="0.2024%" height="15" fill="rgb(244,45,10)" fg:x="143" fg:w="1"/><text x="29.1974%" y="559.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.20%)</title><rect x="28.9474%" y="533" width="0.2024%" height="15" fill="rgb(207,125,25)" fg:x="143" fg:w="1"/><text x="29.1974%" y="543.50"></text></g><g><title>mi_page_free_list_extend.constprop.0 (1 samples, 0.20%)</title><rect x="28.9474%" y="517" width="0.2024%" height="15" fill="rgb(210,195,18)" fg:x="143" fg:w="1"/><text x="29.1974%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="501" width="0.2024%" height="15" fill="rgb(249,80,12)" fg:x="143" fg:w="1"/><text x="29.1974%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="485" width="0.2024%" height="15" fill="rgb(221,65,9)" fg:x="143" fg:w="1"/><text x="29.1974%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="469" width="0.2024%" height="15" fill="rgb(235,49,36)" fg:x="143" fg:w="1"/><text x="29.1974%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="453" width="0.2024%" height="15" fill="rgb(225,32,20)" fg:x="143" fg:w="1"/><text x="29.1974%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="437" width="0.2024%" height="15" fill="rgb(215,141,46)" fg:x="143" fg:w="1"/><text x="29.1974%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="421" width="0.2024%" height="15" fill="rgb(250,160,47)" fg:x="143" fg:w="1"/><text x="29.1974%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="405" width="0.2024%" height="15" fill="rgb(216,222,40)" fg:x="143" fg:w="1"/><text x="29.1974%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="389" width="0.2024%" height="15" fill="rgb(234,217,39)" fg:x="143" fg:w="1"/><text x="29.1974%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="373" width="0.2024%" height="15" fill="rgb(207,178,40)" fg:x="143" fg:w="1"/><text x="29.1974%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="28.9474%" y="357" width="0.2024%" height="15" fill="rgb(221,136,13)" fg:x="143" fg:w="1"/><text x="29.1974%" y="367.50"></text></g><g><title>__GI___sched_yield (2 samples, 0.40%)</title><rect x="29.1498%" y="901" width="0.4049%" height="15" fill="rgb(249,199,10)" fg:x="144" fg:w="2"/><text x="29.3998%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="29.1498%" y="885" width="0.4049%" height="15" fill="rgb(249,222,13)" fg:x="144" fg:w="2"/><text x="29.3998%" y="895.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6 samples, 1.21%)</title><rect x="29.5547%" y="901" width="1.2146%" height="15" fill="rgb(244,185,38)" fg:x="146" fg:w="6"/><text x="29.8047%" y="911.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (6 samples, 1.21%)</title><rect x="29.5547%" y="885" width="1.2146%" height="15" fill="rgb(236,202,9)" fg:x="146" fg:w="6"/><text x="29.8047%" y="895.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (6 samples, 1.21%)</title><rect x="29.5547%" y="869" width="1.2146%" height="15" fill="rgb(250,229,37)" fg:x="146" fg:w="6"/><text x="29.8047%" y="879.50"></text></g><g><title>_mi_malloc_generic (6 samples, 1.21%)</title><rect x="29.5547%" y="853" width="1.2146%" height="15" fill="rgb(206,174,23)" fg:x="146" fg:w="6"/><text x="29.8047%" y="863.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 1.21%)</title><rect x="29.5547%" y="837" width="1.2146%" height="15" fill="rgb(211,33,43)" fg:x="146" fg:w="6"/><text x="29.8047%" y="847.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 1.21%)</title><rect x="29.5547%" y="821" width="1.2146%" height="15" fill="rgb(245,58,50)" fg:x="146" fg:w="6"/><text x="29.8047%" y="831.50"></text></g><g><title>mi_page_free_list_extend.constprop.0 (6 samples, 1.21%)</title><rect x="29.5547%" y="805" width="1.2146%" height="15" fill="rgb(244,68,36)" fg:x="146" fg:w="6"/><text x="29.8047%" y="815.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="29.5547%" y="789" width="1.2146%" height="15" fill="rgb(232,229,15)" fg:x="146" fg:w="6"/><text x="29.8047%" y="799.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="29.5547%" y="773" width="1.2146%" height="15" fill="rgb(254,30,23)" fg:x="146" fg:w="6"/><text x="29.8047%" y="783.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="29.5547%" y="757" width="1.2146%" height="15" fill="rgb(235,160,14)" fg:x="146" fg:w="6"/><text x="29.8047%" y="767.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="29.5547%" y="741" width="1.2146%" height="15" fill="rgb(212,155,44)" fg:x="146" fg:w="6"/><text x="29.8047%" y="751.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="29.5547%" y="725" width="1.2146%" height="15" fill="rgb(226,2,50)" fg:x="146" fg:w="6"/><text x="29.8047%" y="735.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="29.7571%" y="709" width="1.0121%" height="15" fill="rgb(234,177,6)" fg:x="147" fg:w="5"/><text x="30.0071%" y="719.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="29.7571%" y="693" width="1.0121%" height="15" fill="rgb(217,24,9)" fg:x="147" fg:w="5"/><text x="30.0071%" y="703.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="29.7571%" y="677" width="1.0121%" height="15" fill="rgb(220,13,46)" fg:x="147" fg:w="5"/><text x="30.0071%" y="687.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="29.7571%" y="661" width="1.0121%" height="15" fill="rgb(239,221,27)" fg:x="147" fg:w="5"/><text x="30.0071%" y="671.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="29.7571%" y="645" width="1.0121%" height="15" fill="rgb(222,198,25)" fg:x="147" fg:w="5"/><text x="30.0071%" y="655.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="29.7571%" y="629" width="1.0121%" height="15" fill="rgb(211,99,13)" fg:x="147" fg:w="5"/><text x="30.0071%" y="639.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="29.7571%" y="613" width="1.0121%" height="15" fill="rgb(232,111,31)" fg:x="147" fg:w="5"/><text x="30.0071%" y="623.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (83 samples, 16.80%)</title><rect x="19.0283%" y="949" width="16.8016%" height="15" fill="rgb(245,82,37)" fg:x="94" fg:w="83"/><text x="19.2783%" y="959.50">std::sys_common::backtrace..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (83 samples, 16.80%)</title><rect x="19.0283%" y="933" width="16.8016%" height="15" fill="rgb(227,149,46)" fg:x="94" fg:w="83"/><text x="19.2783%" y="943.50">rayon_core::registry::Thre..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (41 samples, 8.30%)</title><rect x="27.5304%" y="917" width="8.2996%" height="15" fill="rgb(218,36,50)" fg:x="136" fg:w="41"/><text x="27.7804%" y="927.50">rayon_core::..</text></g><g><title>rayon_core::sleep::Sleep::sleep (25 samples, 5.06%)</title><rect x="30.7692%" y="901" width="5.0607%" height="15" fill="rgb(226,80,48)" fg:x="152" fg:w="25"/><text x="31.0192%" y="911.50">rayon_..</text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (25 samples, 5.06%)</title><rect x="30.7692%" y="885" width="5.0607%" height="15" fill="rgb(238,224,15)" fg:x="152" fg:w="25"/><text x="31.0192%" y="895.50">std::s..</text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (25 samples, 5.06%)</title><rect x="30.7692%" y="869" width="5.0607%" height="15" fill="rgb(241,136,10)" fg:x="152" fg:w="25"/><text x="31.0192%" y="879.50">std::s..</text></g><g><title>std::sys::unix::futex::futex_wait (25 samples, 5.06%)</title><rect x="30.7692%" y="853" width="5.0607%" height="15" fill="rgb(208,32,45)" fg:x="152" fg:w="25"/><text x="31.0192%" y="863.50">std::s..</text></g><g><title>syscall (25 samples, 5.06%)</title><rect x="30.7692%" y="837" width="5.0607%" height="15" fill="rgb(207,135,9)" fg:x="152" fg:w="25"/><text x="31.0192%" y="847.50">syscall</text></g><g><title>[unknown] (25 samples, 5.06%)</title><rect x="30.7692%" y="821" width="5.0607%" height="15" fill="rgb(206,86,44)" fg:x="152" fg:w="25"/><text x="31.0192%" y="831.50">[unkno..</text></g><g><title>[unknown] (25 samples, 5.06%)</title><rect x="30.7692%" y="805" width="5.0607%" height="15" fill="rgb(245,177,15)" fg:x="152" fg:w="25"/><text x="31.0192%" y="815.50">[unkno..</text></g><g><title>[unknown] (25 samples, 5.06%)</title><rect x="30.7692%" y="789" width="5.0607%" height="15" fill="rgb(206,64,50)" fg:x="152" fg:w="25"/><text x="31.0192%" y="799.50">[unkno..</text></g><g><title>[unknown] (25 samples, 5.06%)</title><rect x="30.7692%" y="773" width="5.0607%" height="15" fill="rgb(234,36,40)" fg:x="152" fg:w="25"/><text x="31.0192%" y="783.50">[unkno..</text></g><g><title>[unknown] (25 samples, 5.06%)</title><rect x="30.7692%" y="757" width="5.0607%" height="15" fill="rgb(213,64,8)" fg:x="152" fg:w="25"/><text x="31.0192%" y="767.50">[unkno..</text></g><g><title>[unknown] (25 samples, 5.06%)</title><rect x="30.7692%" y="741" width="5.0607%" height="15" fill="rgb(210,75,36)" fg:x="152" fg:w="25"/><text x="31.0192%" y="751.50">[unkno..</text></g><g><title>[unknown] (24 samples, 4.86%)</title><rect x="30.9717%" y="725" width="4.8583%" height="15" fill="rgb(229,88,21)" fg:x="153" fg:w="24"/><text x="31.2217%" y="735.50">[unkno..</text></g><g><title>[unknown] (24 samples, 4.86%)</title><rect x="30.9717%" y="709" width="4.8583%" height="15" fill="rgb(252,204,47)" fg:x="153" fg:w="24"/><text x="31.2217%" y="719.50">[unkno..</text></g><g><title>[unknown] (23 samples, 4.66%)</title><rect x="31.1741%" y="693" width="4.6559%" height="15" fill="rgb(208,77,27)" fg:x="154" fg:w="23"/><text x="31.4241%" y="703.50">[unkn..</text></g><g><title>[unknown] (23 samples, 4.66%)</title><rect x="31.1741%" y="677" width="4.6559%" height="15" fill="rgb(221,76,26)" fg:x="154" fg:w="23"/><text x="31.4241%" y="687.50">[unkn..</text></g><g><title>[unknown] (23 samples, 4.66%)</title><rect x="31.1741%" y="661" width="4.6559%" height="15" fill="rgb(225,139,18)" fg:x="154" fg:w="23"/><text x="31.4241%" y="671.50">[unkn..</text></g><g><title>[unknown] (23 samples, 4.66%)</title><rect x="31.1741%" y="645" width="4.6559%" height="15" fill="rgb(230,137,11)" fg:x="154" fg:w="23"/><text x="31.4241%" y="655.50">[unkn..</text></g><g><title>[unknown] (23 samples, 4.66%)</title><rect x="31.1741%" y="629" width="4.6559%" height="15" fill="rgb(212,28,1)" fg:x="154" fg:w="23"/><text x="31.4241%" y="639.50">[unkn..</text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="35.4251%" y="613" width="0.4049%" height="15" fill="rgb(248,164,17)" fg:x="175" fg:w="2"/><text x="35.6751%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="35.6275%" y="597" width="0.2024%" height="15" fill="rgb(222,171,42)" fg:x="176" fg:w="1"/><text x="35.8775%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="35.6275%" y="581" width="0.2024%" height="15" fill="rgb(243,84,45)" fg:x="176" fg:w="1"/><text x="35.8775%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="35.6275%" y="565" width="0.2024%" height="15" fill="rgb(252,49,23)" fg:x="176" fg:w="1"/><text x="35.8775%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="35.6275%" y="549" width="0.2024%" height="15" fill="rgb(215,19,7)" fg:x="176" fg:w="1"/><text x="35.8775%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="35.6275%" y="533" width="0.2024%" height="15" fill="rgb(238,81,41)" fg:x="176" fg:w="1"/><text x="35.8775%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;melon::world::World&gt; (1 samples, 0.20%)</title><rect x="35.8300%" y="549" width="0.2024%" height="15" fill="rgb(210,199,37)" fg:x="177" fg:w="1"/><text x="36.0800%" y="559.50"></text></g><g><title>melon::entity_builder::EntityBuilder::spawn (2 samples, 0.40%)</title><rect x="36.0324%" y="549" width="0.4049%" height="15" fill="rgb(244,192,49)" fg:x="178" fg:w="2"/><text x="36.2824%" y="559.50"></text></g><g><title>&lt;melon::world::World as melon::entity_builder::SpawnLocation&gt;::spawn (2 samples, 0.40%)</title><rect x="36.0324%" y="533" width="0.4049%" height="15" fill="rgb(226,211,11)" fg:x="178" fg:w="2"/><text x="36.2824%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.40%)</title><rect x="36.0324%" y="517" width="0.4049%" height="15" fill="rgb(236,162,54)" fg:x="178" fg:w="2"/><text x="36.2824%" y="527.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.20%)</title><rect x="36.2348%" y="501" width="0.2024%" height="15" fill="rgb(220,229,9)" fg:x="179" fg:w="1"/><text x="36.4848%" y="511.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.20%)</title><rect x="36.2348%" y="485" width="0.2024%" height="15" fill="rgb(250,87,22)" fg:x="179" fg:w="1"/><text x="36.4848%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.20%)</title><rect x="36.4372%" y="517" width="0.2024%" height="15" fill="rgb(239,43,17)" fg:x="180" fg:w="1"/><text x="36.6872%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.40%)</title><rect x="37.0445%" y="485" width="0.4049%" height="15" fill="rgb(231,177,25)" fg:x="183" fg:w="2"/><text x="37.2945%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.20%)</title><rect x="37.2470%" y="469" width="0.2024%" height="15" fill="rgb(219,179,1)" fg:x="184" fg:w="1"/><text x="37.4970%" y="479.50"></text></g><g><title>rstar::algorithm::rstar::choose_subtree (1 samples, 0.20%)</title><rect x="37.6518%" y="453" width="0.2024%" height="15" fill="rgb(238,219,53)" fg:x="186" fg:w="1"/><text x="37.9018%" y="463.50"></text></g><g><title>rstar::algorithm::rstar::forced_insertion (5 samples, 1.01%)</title><rect x="37.4494%" y="485" width="1.0121%" height="15" fill="rgb(232,167,36)" fg:x="185" fg:w="5"/><text x="37.6994%" y="495.50"></text></g><g><title>rstar::algorithm::rstar::forced_insertion (4 samples, 0.81%)</title><rect x="37.6518%" y="469" width="0.8097%" height="15" fill="rgb(244,19,51)" fg:x="186" fg:w="4"/><text x="37.9018%" y="479.50"></text></g><g><title>rstar::algorithm::rstar::forced_insertion (3 samples, 0.61%)</title><rect x="37.8543%" y="453" width="0.6073%" height="15" fill="rgb(224,6,22)" fg:x="187" fg:w="3"/><text x="38.1043%" y="463.50"></text></g><g><title>rstar::algorithm::rstar::forced_insertion (3 samples, 0.61%)</title><rect x="37.8543%" y="437" width="0.6073%" height="15" fill="rgb(224,145,5)" fg:x="187" fg:w="3"/><text x="38.1043%" y="447.50"></text></g><g><title>rstar::algorithm::rstar::forced_insertion (2 samples, 0.40%)</title><rect x="38.0567%" y="421" width="0.4049%" height="15" fill="rgb(234,130,49)" fg:x="188" fg:w="2"/><text x="38.3067%" y="431.50"></text></g><g><title>rstar::algorithm::rstar::choose_subtree (1 samples, 0.20%)</title><rect x="38.2591%" y="405" width="0.2024%" height="15" fill="rgb(254,6,2)" fg:x="189" fg:w="1"/><text x="38.5091%" y="415.50"></text></g><g><title>rstar::algorithm::rstar::choose_subtree (1 samples, 0.20%)</title><rect x="38.4615%" y="421" width="0.2024%" height="15" fill="rgb(208,96,46)" fg:x="190" fg:w="1"/><text x="38.7115%" y="431.50"></text></g><g><title>&lt;rstar::algorithm::rstar::RStarInsertionStrategy as rstar::params::InsertionStrategy&gt;::insert (10 samples, 2.02%)</title><rect x="37.0445%" y="501" width="2.0243%" height="15" fill="rgb(239,3,39)" fg:x="183" fg:w="10"/><text x="37.2945%" y="511.50">&lt;..</text></g><g><title>rstar::algorithm::rstar::recursive_insert (3 samples, 0.61%)</title><rect x="38.4615%" y="485" width="0.6073%" height="15" fill="rgb(233,210,1)" fg:x="190" fg:w="3"/><text x="38.7115%" y="495.50"></text></g><g><title>rstar::algorithm::rstar::recursive_insert (3 samples, 0.61%)</title><rect x="38.4615%" y="469" width="0.6073%" height="15" fill="rgb(244,137,37)" fg:x="190" fg:w="3"/><text x="38.7115%" y="479.50"></text></g><g><title>rstar::algorithm::rstar::recursive_insert (3 samples, 0.61%)</title><rect x="38.4615%" y="453" width="0.6073%" height="15" fill="rgb(240,136,2)" fg:x="190" fg:w="3"/><text x="38.7115%" y="463.50"></text></g><g><title>rstar::algorithm::rstar::recursive_insert (3 samples, 0.61%)</title><rect x="38.4615%" y="437" width="0.6073%" height="15" fill="rgb(239,18,37)" fg:x="190" fg:w="3"/><text x="38.7115%" y="447.50"></text></g><g><title>rstar::algorithm::rstar::recursive_insert (2 samples, 0.40%)</title><rect x="38.6640%" y="421" width="0.4049%" height="15" fill="rgb(218,185,22)" fg:x="191" fg:w="2"/><text x="38.9140%" y="431.50"></text></g><g><title>rstar::algorithm::rstar::choose_subtree (2 samples, 0.40%)</title><rect x="38.6640%" y="405" width="0.4049%" height="15" fill="rgb(225,218,4)" fg:x="191" fg:w="2"/><text x="38.9140%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.40%)</title><rect x="39.0688%" y="501" width="0.4049%" height="15" fill="rgb(230,182,32)" fg:x="193" fg:w="2"/><text x="39.3188%" y="511.50"></text></g><g><title>melon::base_resources::position_hook (297 samples, 60.12%)</title><rect x="36.6397%" y="517" width="60.1215%" height="15" fill="rgb(242,56,43)" fg:x="181" fg:w="297"/><text x="36.8897%" y="527.50">melon::base_resources::position_hook</text></g><g><title>rstar::rtree::RTree&lt;T,Params&gt;::remove (283 samples, 57.29%)</title><rect x="39.4737%" y="501" width="57.2874%" height="15" fill="rgb(233,99,24)" fg:x="195" fg:w="283"/><text x="39.7237%" y="511.50">rstar::rtree::RTree&lt;T,Params&gt;::remove</text></g><g><title>rstar::algorithm::removal::DrainIterator&lt;T,R,Params&gt;::pop_node (123 samples, 24.90%)</title><rect x="71.8623%" y="485" width="24.8988%" height="15" fill="rgb(234,209,42)" fg:x="355" fg:w="123"/><text x="72.1123%" y="495.50">rstar::algorithm::removal::DrainIterator..</text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="96.3563%" y="469" width="0.4049%" height="15" fill="rgb(227,7,12)" fg:x="476" fg:w="2"/><text x="96.6063%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="96.3563%" y="453" width="0.4049%" height="15" fill="rgb(245,203,43)" fg:x="476" fg:w="2"/><text x="96.6063%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="96.3563%" y="437" width="0.4049%" height="15" fill="rgb(238,205,33)" fg:x="476" fg:w="2"/><text x="96.6063%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="96.3563%" y="421" width="0.4049%" height="15" fill="rgb(231,56,7)" fg:x="476" fg:w="2"/><text x="96.6063%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.5587%" y="405" width="0.2024%" height="15" fill="rgb(244,186,29)" fg:x="477" fg:w="1"/><text x="96.8087%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.5587%" y="389" width="0.2024%" height="15" fill="rgb(234,111,31)" fg:x="477" fg:w="1"/><text x="96.8087%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.5587%" y="373" width="0.2024%" height="15" fill="rgb(241,149,10)" fg:x="477" fg:w="1"/><text x="96.8087%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.5587%" y="357" width="0.2024%" height="15" fill="rgb(249,206,44)" fg:x="477" fg:w="1"/><text x="96.8087%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.5587%" y="341" width="0.2024%" height="15" fill="rgb(251,153,30)" fg:x="477" fg:w="1"/><text x="96.8087%" y="351.50"></text></g><g><title>melon::query::ComponentGroup::set (1 samples, 0.20%)</title><rect x="96.7611%" y="437" width="0.2024%" height="15" fill="rgb(239,152,38)" fg:x="478" fg:w="1"/><text x="97.0111%" y="447.50"></text></g><g><title>melon::component::UntypedComponent::new (1 samples, 0.20%)</title><rect x="96.7611%" y="421" width="0.2024%" height="15" fill="rgb(249,139,47)" fg:x="478" fg:w="1"/><text x="97.0111%" y="431.50"></text></g><g><title>const_fnv1a_hash::fnv1a_hash_64 (1 samples, 0.20%)</title><rect x="96.7611%" y="405" width="0.2024%" height="15" fill="rgb(244,64,35)" fg:x="478" fg:w="1"/><text x="97.0111%" y="415.50"></text></g><g><title>&lt;position_map::TestSystem as melon::system::System&gt;::execute (2 samples, 0.40%)</title><rect x="96.7611%" y="453" width="0.4049%" height="15" fill="rgb(216,46,15)" fg:x="478" fg:w="2"/><text x="97.0111%" y="463.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.20%)</title><rect x="96.9636%" y="437" width="0.2024%" height="15" fill="rgb(250,74,19)" fg:x="479" fg:w="1"/><text x="97.2136%" y="447.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.20%)</title><rect x="96.9636%" y="421" width="0.2024%" height="15" fill="rgb(249,42,33)" fg:x="479" fg:w="1"/><text x="97.2136%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.20%)</title><rect x="96.9636%" y="405" width="0.2024%" height="15" fill="rgb(242,149,17)" fg:x="479" fg:w="1"/><text x="97.2136%" y="415.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (1 samples, 0.20%)</title><rect x="96.9636%" y="389" width="0.2024%" height="15" fill="rgb(244,29,21)" fg:x="479" fg:w="1"/><text x="97.2136%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="96.9636%" y="373" width="0.2024%" height="15" fill="rgb(220,130,37)" fg:x="479" fg:w="1"/><text x="97.2136%" y="383.50"></text></g><g><title>std::io::stdio::print_to::{{closure}}::{{closure}} (1 samples, 0.20%)</title><rect x="96.9636%" y="357" width="0.2024%" height="15" fill="rgb(211,67,2)" fg:x="479" fg:w="1"/><text x="97.2136%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.20%)</title><rect x="96.9636%" y="341" width="0.2024%" height="15" fill="rgb(235,68,52)" fg:x="479" fg:w="1"/><text x="97.2136%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.20%)</title><rect x="96.9636%" y="325" width="0.2024%" height="15" fill="rgb(246,142,3)" fg:x="479" fg:w="1"/><text x="97.2136%" y="335.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.20%)</title><rect x="96.9636%" y="309" width="0.2024%" height="15" fill="rgb(241,25,7)" fg:x="479" fg:w="1"/><text x="97.2136%" y="319.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.20%)</title><rect x="96.9636%" y="293" width="0.2024%" height="15" fill="rgb(242,119,39)" fg:x="479" fg:w="1"/><text x="97.2136%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.20%)</title><rect x="96.9636%" y="277" width="0.2024%" height="15" fill="rgb(241,98,45)" fg:x="479" fg:w="1"/><text x="97.2136%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.20%)</title><rect x="96.9636%" y="261" width="0.2024%" height="15" fill="rgb(254,28,30)" fg:x="479" fg:w="1"/><text x="97.2136%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.20%)</title><rect x="96.9636%" y="245" width="0.2024%" height="15" fill="rgb(241,142,54)" fg:x="479" fg:w="1"/><text x="97.2136%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="96.9636%" y="229" width="0.2024%" height="15" fill="rgb(222,85,15)" fg:x="479" fg:w="1"/><text x="97.2136%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.20%)</title><rect x="96.9636%" y="213" width="0.2024%" height="15" fill="rgb(210,85,47)" fg:x="479" fg:w="1"/><text x="97.2136%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="197" width="0.2024%" height="15" fill="rgb(224,206,25)" fg:x="479" fg:w="1"/><text x="97.2136%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="181" width="0.2024%" height="15" fill="rgb(243,201,19)" fg:x="479" fg:w="1"/><text x="97.2136%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="165" width="0.2024%" height="15" fill="rgb(236,59,4)" fg:x="479" fg:w="1"/><text x="97.2136%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="149" width="0.2024%" height="15" fill="rgb(254,179,45)" fg:x="479" fg:w="1"/><text x="97.2136%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="133" width="0.2024%" height="15" fill="rgb(226,14,10)" fg:x="479" fg:w="1"/><text x="97.2136%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="117" width="0.2024%" height="15" fill="rgb(244,27,41)" fg:x="479" fg:w="1"/><text x="97.2136%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="101" width="0.2024%" height="15" fill="rgb(235,35,32)" fg:x="479" fg:w="1"/><text x="97.2136%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="85" width="0.2024%" height="15" fill="rgb(218,68,31)" fg:x="479" fg:w="1"/><text x="97.2136%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="69" width="0.2024%" height="15" fill="rgb(207,120,37)" fg:x="479" fg:w="1"/><text x="97.2136%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="53" width="0.2024%" height="15" fill="rgb(227,98,0)" fg:x="479" fg:w="1"/><text x="97.2136%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="96.9636%" y="37" width="0.2024%" height="15" fill="rgb(207,7,3)" fg:x="479" fg:w="1"/><text x="97.2136%" y="47.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (394 samples, 79.76%)</title><rect x="19.0283%" y="997" width="79.7571%" height="15" fill="rgb(206,98,19)" fg:x="94" fg:w="394"/><text x="19.2783%" y="1007.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (394 samples, 79.76%)</title><rect x="19.0283%" y="981" width="79.7571%" height="15" fill="rgb(217,5,26)" fg:x="94" fg:w="394"/><text x="19.2783%" y="991.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (394 samples, 79.76%)</title><rect x="19.0283%" y="965" width="79.7571%" height="15" fill="rgb(235,190,38)" fg:x="94" fg:w="394"/><text x="19.2783%" y="975.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (311 samples, 62.96%)</title><rect x="35.8300%" y="949" width="62.9555%" height="15" fill="rgb(247,86,24)" fg:x="177" fg:w="311"/><text x="36.0800%" y="959.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (311 samples, 62.96%)</title><rect x="35.8300%" y="933" width="62.9555%" height="15" fill="rgb(205,101,16)" fg:x="177" fg:w="311"/><text x="36.0800%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (311 samples, 62.96%)</title><rect x="35.8300%" y="917" width="62.9555%" height="15" fill="rgb(246,168,33)" fg:x="177" fg:w="311"/><text x="36.0800%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (311 samples, 62.96%)</title><rect x="35.8300%" y="901" width="62.9555%" height="15" fill="rgb(231,114,1)" fg:x="177" fg:w="311"/><text x="36.0800%" y="911.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (311 samples, 62.96%)</title><rect x="35.8300%" y="885" width="62.9555%" height="15" fill="rgb(207,184,53)" fg:x="177" fg:w="311"/><text x="36.0800%" y="895.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (311 samples, 62.96%)</title><rect x="35.8300%" y="869" width="62.9555%" height="15" fill="rgb(224,95,51)" fg:x="177" fg:w="311"/><text x="36.0800%" y="879.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (311 samples, 62.96%)</title><rect x="35.8300%" y="853" width="62.9555%" height="15" fill="rgb(212,188,45)" fg:x="177" fg:w="311"/><text x="36.0800%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>test::run_test::run_test_inner::{{closure}} (311 samples, 62.96%)</title><rect x="35.8300%" y="837" width="62.9555%" height="15" fill="rgb(223,154,38)" fg:x="177" fg:w="311"/><text x="36.0800%" y="847.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test::run_test_inner::{{closure}} (311 samples, 62.96%)</title><rect x="35.8300%" y="821" width="62.9555%" height="15" fill="rgb(251,22,52)" fg:x="177" fg:w="311"/><text x="36.0800%" y="831.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test_in_process (311 samples, 62.96%)</title><rect x="35.8300%" y="805" width="62.9555%" height="15" fill="rgb(229,209,22)" fg:x="177" fg:w="311"/><text x="36.0800%" y="815.50">test::run_test_in_process</text></g><g><title>std::panic::catch_unwind (311 samples, 62.96%)</title><rect x="35.8300%" y="789" width="62.9555%" height="15" fill="rgb(234,138,34)" fg:x="177" fg:w="311"/><text x="36.0800%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (311 samples, 62.96%)</title><rect x="35.8300%" y="773" width="62.9555%" height="15" fill="rgb(212,95,11)" fg:x="177" fg:w="311"/><text x="36.0800%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (311 samples, 62.96%)</title><rect x="35.8300%" y="757" width="62.9555%" height="15" fill="rgb(240,179,47)" fg:x="177" fg:w="311"/><text x="36.0800%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (311 samples, 62.96%)</title><rect x="35.8300%" y="741" width="62.9555%" height="15" fill="rgb(240,163,11)" fg:x="177" fg:w="311"/><text x="36.0800%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (311 samples, 62.96%)</title><rect x="35.8300%" y="725" width="62.9555%" height="15" fill="rgb(236,37,12)" fg:x="177" fg:w="311"/><text x="36.0800%" y="735.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>test::__rust_begin_short_backtrace (311 samples, 62.96%)</title><rect x="35.8300%" y="709" width="62.9555%" height="15" fill="rgb(232,164,16)" fg:x="177" fg:w="311"/><text x="36.0800%" y="719.50">test::__rust_begin_short_backtrace</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (311 samples, 62.96%)</title><rect x="35.8300%" y="693" width="62.9555%" height="15" fill="rgb(244,205,15)" fg:x="177" fg:w="311"/><text x="36.0800%" y="703.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (311 samples, 62.96%)</title><rect x="35.8300%" y="677" width="62.9555%" height="15" fill="rgb(223,117,47)" fg:x="177" fg:w="311"/><text x="36.0800%" y="687.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>test::convert_benchmarks_to_tests::{{closure}}::{{closure}} (311 samples, 62.96%)</title><rect x="35.8300%" y="661" width="62.9555%" height="15" fill="rgb(244,107,35)" fg:x="177" fg:w="311"/><text x="36.0800%" y="671.50">test::convert_benchmarks_to_tests::{{closure}}::{{closure}}</text></g><g><title>test::bench::run_once (311 samples, 62.96%)</title><rect x="35.8300%" y="645" width="62.9555%" height="15" fill="rgb(205,140,8)" fg:x="177" fg:w="311"/><text x="36.0800%" y="655.50">test::bench::run_once</text></g><g><title>test::bench::Bencher::bench (311 samples, 62.96%)</title><rect x="35.8300%" y="629" width="62.9555%" height="15" fill="rgb(228,84,46)" fg:x="177" fg:w="311"/><text x="36.0800%" y="639.50">test::bench::Bencher::bench</text></g><g><title>test::convert_benchmarks_to_tests::{{closure}}::{{closure}}::{{closure}} (311 samples, 62.96%)</title><rect x="35.8300%" y="613" width="62.9555%" height="15" fill="rgb(254,188,9)" fg:x="177" fg:w="311"/><text x="36.0800%" y="623.50">test::convert_benchmarks_to_tests::{{closure}}::{{closure}}::{{closure}}</text></g><g><title>test::__rust_begin_short_backtrace (311 samples, 62.96%)</title><rect x="35.8300%" y="597" width="62.9555%" height="15" fill="rgb(206,112,54)" fg:x="177" fg:w="311"/><text x="36.0800%" y="607.50">test::__rust_begin_short_backtrace</text></g><g><title>test::convert_benchmarks_to_tests::{{closure}}::{{closure}}::{{closure}}::{{closure}} (311 samples, 62.96%)</title><rect x="35.8300%" y="581" width="62.9555%" height="15" fill="rgb(216,84,49)" fg:x="177" fg:w="311"/><text x="36.0800%" y="591.50">test::convert_benchmarks_to_tests::{{closure}}::{{closure}}::{{closure}}::{{closure}}</text></g><g><title>core::ops::function::FnOnce::call_once (311 samples, 62.96%)</title><rect x="35.8300%" y="565" width="62.9555%" height="15" fill="rgb(214,194,35)" fg:x="177" fg:w="311"/><text x="36.0800%" y="575.50">core::ops::function::FnOnce::call_once</text></g><g><title>test::bench::Bencher::iter (308 samples, 62.35%)</title><rect x="36.4372%" y="549" width="62.3482%" height="15" fill="rgb(249,28,3)" fg:x="180" fg:w="308"/><text x="36.6872%" y="559.50">test::bench::Bencher::iter</text></g><g><title>melon::world::World::execute_stage (308 samples, 62.35%)</title><rect x="36.4372%" y="533" width="62.3482%" height="15" fill="rgb(222,56,52)" fg:x="180" fg:w="308"/><text x="36.6872%" y="543.50">melon::world::World::execute_stage</text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (10 samples, 2.02%)</title><rect x="96.7611%" y="517" width="2.0243%" height="15" fill="rgb(245,217,50)" fg:x="478" fg:w="10"/><text x="97.0111%" y="527.50">r..</text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (10 samples, 2.02%)</title><rect x="96.7611%" y="501" width="2.0243%" height="15" fill="rgb(213,201,24)" fg:x="478" fg:w="10"/><text x="97.0111%" y="511.50">&lt;..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 2.02%)</title><rect x="96.7611%" y="485" width="2.0243%" height="15" fill="rgb(248,116,28)" fg:x="478" fg:w="10"/><text x="97.0111%" y="495.50">r..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (10 samples, 2.02%)</title><rect x="96.7611%" y="469" width="2.0243%" height="15" fill="rgb(219,72,43)" fg:x="478" fg:w="10"/><text x="97.0111%" y="479.50">r..</text></g><g><title>melon::world::World::query_world (8 samples, 1.62%)</title><rect x="97.1660%" y="453" width="1.6194%" height="15" fill="rgb(209,138,14)" fg:x="480" fg:w="8"/><text x="97.4160%" y="463.50"></text></g><g><title>melon::query::QueryResultBuilder::with_entity (6 samples, 1.21%)</title><rect x="97.5709%" y="437" width="1.2146%" height="15" fill="rgb(222,18,33)" fg:x="482" fg:w="6"/><text x="97.8209%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::with_capacity_in (6 samples, 1.21%)</title><rect x="97.5709%" y="421" width="1.2146%" height="15" fill="rgb(213,199,7)" fg:x="482" fg:w="6"/><text x="97.8209%" y="431.50"></text></g><g><title>_mi_malloc_generic (6 samples, 1.21%)</title><rect x="97.5709%" y="405" width="1.2146%" height="15" fill="rgb(250,110,10)" fg:x="482" fg:w="6"/><text x="97.8209%" y="415.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 1.21%)</title><rect x="97.5709%" y="389" width="1.2146%" height="15" fill="rgb(248,123,6)" fg:x="482" fg:w="6"/><text x="97.8209%" y="399.50"></text></g><g><title>mi_page_free_list_extend.constprop.0 (6 samples, 1.21%)</title><rect x="97.5709%" y="373" width="1.2146%" height="15" fill="rgb(206,91,31)" fg:x="482" fg:w="6"/><text x="97.8209%" y="383.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="97.5709%" y="357" width="1.2146%" height="15" fill="rgb(211,154,13)" fg:x="482" fg:w="6"/><text x="97.8209%" y="367.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="97.5709%" y="341" width="1.2146%" height="15" fill="rgb(225,148,7)" fg:x="482" fg:w="6"/><text x="97.8209%" y="351.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="97.5709%" y="325" width="1.2146%" height="15" fill="rgb(220,160,43)" fg:x="482" fg:w="6"/><text x="97.8209%" y="335.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="97.5709%" y="309" width="1.2146%" height="15" fill="rgb(213,52,39)" fg:x="482" fg:w="6"/><text x="97.8209%" y="319.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="97.5709%" y="293" width="1.2146%" height="15" fill="rgb(243,137,7)" fg:x="482" fg:w="6"/><text x="97.8209%" y="303.50"></text></g><g><title>[unknown] (6 samples, 1.21%)</title><rect x="97.5709%" y="277" width="1.2146%" height="15" fill="rgb(230,79,13)" fg:x="482" fg:w="6"/><text x="97.8209%" y="287.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="97.7733%" y="261" width="1.0121%" height="15" fill="rgb(247,105,23)" fg:x="483" fg:w="5"/><text x="98.0233%" y="271.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="97.7733%" y="245" width="1.0121%" height="15" fill="rgb(223,179,41)" fg:x="483" fg:w="5"/><text x="98.0233%" y="255.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="97.7733%" y="229" width="1.0121%" height="15" fill="rgb(218,9,34)" fg:x="483" fg:w="5"/><text x="98.0233%" y="239.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="97.7733%" y="213" width="1.0121%" height="15" fill="rgb(222,106,8)" fg:x="483" fg:w="5"/><text x="98.0233%" y="223.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="97.7733%" y="197" width="1.0121%" height="15" fill="rgb(211,220,0)" fg:x="483" fg:w="5"/><text x="98.0233%" y="207.50"></text></g><g><title>[unknown] (5 samples, 1.01%)</title><rect x="97.7733%" y="181" width="1.0121%" height="15" fill="rgb(229,52,16)" fg:x="483" fg:w="5"/><text x="98.0233%" y="191.50"></text></g><g><title>__GI___sigaltstack (1 samples, 0.20%)</title><rect x="98.7854%" y="965" width="0.2024%" height="15" fill="rgb(212,155,18)" fg:x="488" fg:w="1"/><text x="99.0354%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="98.7854%" y="949" width="0.2024%" height="15" fill="rgb(242,21,14)" fg:x="488" fg:w="1"/><text x="99.0354%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.20%)</title><rect x="98.9879%" y="965" width="0.2024%" height="15" fill="rgb(222,19,48)" fg:x="489" fg:w="1"/><text x="99.2379%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.20%)</title><rect x="98.9879%" y="949" width="0.2024%" height="15" fill="rgb(232,45,27)" fg:x="489" fg:w="1"/><text x="99.2379%" y="959.50"></text></g><g><title>__clone3 (404 samples, 81.78%)</title><rect x="17.6113%" y="1045" width="81.7814%" height="15" fill="rgb(249,103,42)" fg:x="87" fg:w="404"/><text x="17.8613%" y="1055.50">__clone3</text></g><g><title>start_thread (402 samples, 81.38%)</title><rect x="18.0162%" y="1029" width="81.3765%" height="15" fill="rgb(246,81,33)" fg:x="89" fg:w="402"/><text x="18.2662%" y="1039.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (397 samples, 80.36%)</title><rect x="19.0283%" y="1013" width="80.3644%" height="15" fill="rgb(252,33,42)" fg:x="94" fg:w="397"/><text x="19.2783%" y="1023.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (3 samples, 0.61%)</title><rect x="98.7854%" y="997" width="0.6073%" height="15" fill="rgb(209,212,41)" fg:x="488" fg:w="3"/><text x="99.0354%" y="1007.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (3 samples, 0.61%)</title><rect x="98.7854%" y="981" width="0.6073%" height="15" fill="rgb(207,154,6)" fg:x="488" fg:w="3"/><text x="99.0354%" y="991.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.20%)</title><rect x="99.1903%" y="965" width="0.2024%" height="15" fill="rgb(223,64,47)" fg:x="490" fg:w="1"/><text x="99.4403%" y="975.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.20%)</title><rect x="99.1903%" y="949" width="0.2024%" height="15" fill="rgb(211,161,38)" fg:x="490" fg:w="1"/><text x="99.4403%" y="959.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.20%)</title><rect x="99.1903%" y="933" width="0.2024%" height="15" fill="rgb(219,138,40)" fg:x="490" fg:w="1"/><text x="99.4403%" y="943.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.20%)</title><rect x="99.1903%" y="917" width="0.2024%" height="15" fill="rgb(241,228,46)" fg:x="490" fg:w="1"/><text x="99.4403%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="99.1903%" y="901" width="0.2024%" height="15" fill="rgb(223,209,38)" fg:x="490" fg:w="1"/><text x="99.4403%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="99.1903%" y="885" width="0.2024%" height="15" fill="rgb(236,164,45)" fg:x="490" fg:w="1"/><text x="99.4403%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="99.1903%" y="869" width="0.2024%" height="15" fill="rgb(231,15,5)" fg:x="490" fg:w="1"/><text x="99.4403%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="99.1903%" y="853" width="0.2024%" height="15" fill="rgb(252,35,15)" fg:x="490" fg:w="1"/><text x="99.4403%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="99.1903%" y="837" width="0.2024%" height="15" fill="rgb(248,181,18)" fg:x="490" fg:w="1"/><text x="99.4403%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="99.1903%" y="821" width="0.2024%" height="15" fill="rgb(233,39,42)" fg:x="490" fg:w="1"/><text x="99.4403%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="99.1903%" y="805" width="0.2024%" height="15" fill="rgb(238,110,33)" fg:x="490" fg:w="1"/><text x="99.4403%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="99.1903%" y="789" width="0.2024%" height="15" fill="rgb(233,195,10)" fg:x="490" fg:w="1"/><text x="99.4403%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="99.1903%" y="773" width="0.2024%" height="15" fill="rgb(254,105,3)" fg:x="490" fg:w="1"/><text x="99.4403%" y="783.50"></text></g><g><title>rstar::algorithm::removal::DrainIterator&lt;T,R,Params&gt;::pop_node (2 samples, 0.40%)</title><rect x="99.3927%" y="1045" width="0.4049%" height="15" fill="rgb(221,225,9)" fg:x="491" fg:w="2"/><text x="99.6427%" y="1055.50"></text></g><g><title>all (494 samples, 100%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(224,227,45)" fg:x="0" fg:w="494"/><text x="0.2500%" y="1087.50"></text></g><g><title>position_map_te (481 samples, 97.37%)</title><rect x="2.6316%" y="1061" width="97.3684%" height="15" fill="rgb(229,198,43)" fg:x="13" fg:w="481"/><text x="2.8816%" y="1071.50">position_map_te</text></g><g><title>rstar::algorithm::rstar::choose_subtree (1 samples, 0.20%)</title><rect x="99.7976%" y="1045" width="0.2024%" height="15" fill="rgb(206,209,35)" fg:x="493" fg:w="1"/><text x="100.0476%" y="1055.50"></text></g></svg></svg>